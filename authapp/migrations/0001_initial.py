# Generated by Django 3.0.6 on 2020-07-12 20:08

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email')),
                ('blocage', models.CharField(choices=[('Vrai', 'Vrai'), ('Faux', 'Faux')], default='Faux', max_length=10)),
                ('profil', models.CharField(choices=[('Simple', 'Simple'), ('Admin', 'Admin'), ('Policier', 'Policier'), ('Gendarme', 'Gendarme'), ('Pompier', 'Pompier')], default='Simple', max_length=10)),
                ('statut', models.CharField(choices=[('Anonyme', 'Anonyme'), ('Public', 'Public')], default='Public', max_length=10)),
                ('alias', models.CharField(blank=True, max_length=20, null=True)),
                ('phone', models.IntegerField(blank=True, null=True, unique=True)),
                ('dateNaissance', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='profils/')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Agence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Police', 'Police'), ('Gendarmerie', 'Gendarmerie'), ('Sapeur-pompier', 'Sapeur-pompier'), ('Autre', 'Autre')], max_length=20)),
                ('nom', models.CharField(max_length=100)),
                ('phone', models.IntegerField()),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Alerte',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(choices=[('Directe', 'Directe'), ('Programmée', 'Programmée')], default='Directe', max_length=10)),
                ('profil', models.CharField(choices=[('Anonyme', 'Anonyme'), ('Public', 'Public')], default='Anonyme', max_length=10)),
                ('statut', models.CharField(choices=[('Active', 'Active'), ('Inactive', 'Inactive')], default='Active', max_length=10)),
                ('dateAlerte', models.DateTimeField(auto_now_add=True)),
                ('utilisee', models.CharField(choices=[('Vrai', 'Vrai'), ('Faux', 'Faux')], default='Vrai', max_length=10)),
                ('auteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Recherché', 'Recherché'), ('Fugitif', 'Fugitif'), ('Possession illégale d"arme', 'Possession illégale d"arme'), ('Fraude', 'Fraude'), ('Corruption', 'Corruption'), ('Meurtre', 'Meurtre'), ('Cambriolage', 'Cambriolage'), ('Escroquerie', 'Escroquerie'), ('Agression', 'Agression'), ('Braquage', 'Braquage'), ('Trafic de drogue', 'Trafic de drogue'), ('Disparition', 'Disparition'), ('Vol', 'Vol'), ('Enlèvement', 'Enlèvement'), ('Viol', 'Viol'), ('Autre', 'Autre')], max_length=30)),
                ('situation', models.CharField(choices=[('Résolue', 'Résolue'), ('Non résolu', 'Non résolu')], default='Non résolu', max_length=15)),
                ('statut', models.CharField(choices=[('Anonyme', 'Anonyme'), ('Public', 'Public')], default='Anonyme', max_length=10)),
                ('lienPosteur', models.CharField(choices=[('Victime', 'Victime'), ('Témoin', 'Témoin'), ('Voisin', 'Voisin'), ('Policier', 'Policier'), ('Gendarme', 'Gendarme'), ('Sapeur-pompier', 'Sapeur-pompier'), ('Autre', 'Autre')], max_length=20)),
                ('titre', models.CharField(max_length=100)),
                ('details', models.TextField()),
                ('blocage', models.CharField(choices=[('Bloqué', 'Bloqué'), ('Débloqué', 'Débloqué')], default='Débloqué', max_length=20)),
                ('dateArticle', models.DateTimeField(auto_now_add=True)),
                ('auteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Groupe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombreMembre', models.IntegerField(default=1)),
                ('nom', models.CharField(max_length=50)),
                ('dateCreation', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Localite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(max_length=20)),
                ('adresse', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='TextAlerteSugession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=20)),
                ('texte', models.TextField()),
                ('auteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TextAlerte',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('texte', models.TextField()),
                ('dateTexte', models.DateTimeField(auto_now_add=True)),
                ('alerte', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authapp.Alerte')),
            ],
        ),
        migrations.CreateModel(
            name='SuiviAlertePerso',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reception', models.CharField(choices=[('Vrai', 'Vrai'), ('Faux', 'Faux')], default='Faux', max_length=5)),
                ('reponse', models.CharField(choices=[('Vrai', 'Vrai'), ('Faux', 'Faux')], default='Faux', max_length=5)),
                ('DateReception', models.DateTimeField(blank=True, null=True)),
                ('DateReponse', models.DateTimeField(blank=True, null=True)),
                ('alerte', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authapp.Alerte')),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'SuiviAlertePerso',
            },
        ),
        migrations.CreateModel(
            name='SuiviAlerteLocalite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombreReception', models.IntegerField(default=0)),
                ('nombreReponse', models.IntegerField(default=0)),
                ('alerte', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authapp.Alerte')),
                ('localite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authapp.Localite')),
            ],
            options={
                'db_table': 'SuiviAlerteLocalite',
            },
        ),
        migrations.CreateModel(
            name='SuiviAlerteGroupe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombreReception', models.IntegerField(default=0)),
                ('nombreReponse', models.IntegerField(default=0)),
                ('alerte', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authapp.Alerte')),
                ('groupe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authapp.Groupe')),
            ],
            options={
                'db_table': 'SuiviAlerteGroupe',
            },
        ),
        migrations.CreateModel(
            name='SuiviAlerteAgence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombreReception', models.IntegerField(default=0)),
                ('nombreReponse', models.IntegerField(default=0)),
                ('dateTransfert', models.DateTimeField(auto_now_add=True)),
                ('agence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authapp.Agence')),
                ('alerte', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authapp.Alerte')),
            ],
            options={
                'db_table': 'SuiviAlerteAgence',
            },
        ),
        migrations.CreateModel(
            name='Signal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('objet', models.CharField(choices=[('Propos mensongers', 'Propos mensongers'), ('Non respect des regles', 'Non respect des regles'), ('Propos choquants ou déplacés', 'Propos choquants ou déplacés'), ('Audio, vidéo ou photo choquant', 'Audio, vidéo ou photo choquant'), ('Autre', 'Autre')], max_length=50)),
                ('details', models.TextField()),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authapp.Article')),
                ('auteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Signal',
            },
        ),
        migrations.CreateModel(
            name='PieceJointe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('proprio', models.CharField(choices=[('Article', 'Article'), ('Alerte', 'Alerte')], max_length=10)),
                ('type', models.CharField(choices=[('Audio', 'Audio'), ('Vidéo', 'Vidéo'), ('Photo', 'Photo'), ('Texte', 'Texte')], max_length=10)),
                ('titre', models.CharField(blank=True, max_length=50, null=True)),
                ('piece', models.FileField(blank=True, null=True, upload_to='pieces_jointes/')),
                ('texto', models.TextField(blank=True, null=True)),
                ('datePiece', models.DateTimeField(auto_now_add=True)),
                ('alerte', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='authapp.Alerte')),
                ('article', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='authapp.Article')),
            ],
        ),
        migrations.CreateModel(
            name='Personne',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profil', models.CharField(choices=[('Coupable', 'Coupable'), ('Suspect', 'Suspect'), ('Enlevé', 'Enlevé'), ('Disparu', 'Disparu'), ('Fugitif', 'Fugitif'), ('Victime', 'Victime'), ('Recherché', 'Recherché'), ('A se méfier', 'A se méfier'), ('Autre', 'Autre')], max_length=30)),
                ('nom', models.CharField(blank=True, max_length=30, null=True)),
                ('prenom', models.CharField(blank=True, max_length=30, null=True)),
                ('alias', models.CharField(max_length=30)),
                ('genre', models.CharField(choices=[('Inconnu', 'Inconnu'), ('Femme', 'Femme'), ('Homme', 'Homme')], max_length=30)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField()),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authapp.Article')),
                ('localite', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='authapp.Localite')),
            ],
        ),
        migrations.CreateModel(
            name='Membre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isAdmin', models.CharField(choices=[('Vrai', 'Vrai'), ('Faux', 'Faux')], default='Faux', max_length=5)),
                ('isFondateur', models.CharField(choices=[('Vrai', 'Vrai'), ('Faux', 'Faux')], default='Faux', max_length=5)),
                ('dateJoined', models.DateTimeField(auto_now_add=True)),
                ('groupe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authapp.Groupe')),
                ('user_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Membre',
            },
        ),
        migrations.AddField(
            model_name='groupe',
            name='membres',
            field=models.ManyToManyField(through='authapp.Membre', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Coordonnees',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateCoordonnees', models.DateTimeField(auto_now_add=True)),
                ('longitude', models.DecimalField(decimal_places=20, max_digits=40)),
                ('latitude', models.DecimalField(decimal_places=20, max_digits=40)),
                ('alerte', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='authapp.Alerte')),
            ],
        ),
        migrations.CreateModel(
            name='Bloccage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raison', models.TextField()),
                ('statut', models.CharField(choices=[('Bloqué', 'Bloqué'), ('Débloqué', 'Débloqué')], default='Bloqué', max_length=10)),
                ('bloque', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bloque', to=settings.AUTH_USER_MODEL)),
                ('bloqueur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bloqueur', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'Bloccage',
            },
        ),
        migrations.AddField(
            model_name='article',
            name='localite',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authapp.Localite'),
        ),
        migrations.AddField(
            model_name='alerte',
            name='groupes',
            field=models.ManyToManyField(through='authapp.SuiviAlerteGroupe', to='authapp.Groupe'),
        ),
        migrations.AddField(
            model_name='alerte',
            name='localites',
            field=models.ManyToManyField(through='authapp.SuiviAlerteLocalite', to='authapp.Localite'),
        ),
        migrations.CreateModel(
            name='AgenceLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isAdmin', models.CharField(choices=[('Vrai', 'Vrai'), ('Faux', 'Faux')], default='Faux', max_length=5)),
                ('dateAgenceLink', models.DateTimeField(auto_now_add=True)),
                ('agence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authapp.Agence')),
                ('agent', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'AgenceLink',
            },
        ),
        migrations.AddField(
            model_name='agence',
            name='alertes',
            field=models.ManyToManyField(through='authapp.SuiviAlerteAgence', to='authapp.Alerte'),
        ),
        migrations.AddField(
            model_name='agence',
            name='coordonnees',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='authapp.Coordonnees'),
        ),
        migrations.AddField(
            model_name='agence',
            name='localite',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authapp.Localite'),
        ),
        migrations.AddField(
            model_name='user',
            name='bloques',
            field=models.ManyToManyField(through='authapp.Bloccage', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='localite',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='authapp.Localite'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddConstraint(
            model_name='suivialerteperso',
            constraint=models.UniqueConstraint(fields=('alerte', 'follower'), name='unique_suivi_perso'),
        ),
        migrations.AddConstraint(
            model_name='suivialertelocalite',
            constraint=models.UniqueConstraint(fields=('localite', 'alerte'), name='unique_suivi_localite'),
        ),
        migrations.AddConstraint(
            model_name='suivialertegroupe',
            constraint=models.UniqueConstraint(fields=('groupe', 'alerte'), name='unique_suivi_groupe'),
        ),
        migrations.AddConstraint(
            model_name='suivialerteagence',
            constraint=models.UniqueConstraint(fields=('agence', 'alerte'), name='unique_suivi_agence'),
        ),
        migrations.AddConstraint(
            model_name='signal',
            constraint=models.UniqueConstraint(fields=('article', 'auteur'), name='unique_signal'),
        ),
        migrations.AddConstraint(
            model_name='membre',
            constraint=models.UniqueConstraint(fields=('groupe', 'user_member'), name='unique_user_member'),
        ),
        migrations.AddConstraint(
            model_name='bloccage',
            constraint=models.UniqueConstraint(fields=('bloqueur', 'bloque'), name='unique_blocage'),
        ),
        migrations.AddConstraint(
            model_name='agencelink',
            constraint=models.UniqueConstraint(fields=('agence', 'agent'), name='unique_agent_agence'),
        ),
    ]
